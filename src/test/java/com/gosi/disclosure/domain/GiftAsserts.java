package com.gosi.disclosure.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GiftAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftAllPropertiesEquals(Gift expected, Gift actual) {
        assertGiftAutoGeneratedPropertiesEquals(expected, actual);
        assertGiftAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftAllUpdatablePropertiesEquals(Gift expected, Gift actual) {
        assertGiftUpdatableFieldsEquals(expected, actual);
        assertGiftUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftAutoGeneratedPropertiesEquals(Gift expected, Gift actual) {
        assertThat(actual)
            .as("Verify Gift auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftUpdatableFieldsEquals(Gift expected, Gift actual) {
        assertThat(actual)
            .as("Verify Gift relevant properties")
            .satisfies(a ->
                assertThat(a.getGiftNameOrganizationGiven())
                    .as("check giftNameOrganizationGiven")
                    .isEqualTo(expected.getGiftNameOrganizationGiven())
            )
            .satisfies(a -> assertThat(a.getGiftReason()).as("check giftReason").isEqualTo(expected.getGiftReason()))
            .satisfies(a ->
                assertThat(a.getGiftOfficialOccasion()).as("check giftOfficialOccasion").isEqualTo(expected.getGiftOfficialOccasion())
            )
            .satisfies(a -> assertThat(a.getGiftSpoilsQuickly()).as("check giftSpoilsQuickly").isEqualTo(expected.getGiftSpoilsQuickly()))
            .satisfies(a -> assertThat(a.getGiftForPersonalUse()).as("check giftForPersonalUse").isEqualTo(expected.getGiftForPersonalUse())
            )
            .satisfies(a -> assertThat(a.getGiftType()).as("check giftType").isEqualTo(expected.getGiftType()))
            .satisfies(a -> assertThat(a.getGiftEstimatedValue()).as("check giftEstimatedValue").isEqualTo(expected.getGiftEstimatedValue())
            )
            .satisfies(a -> assertThat(a.getGiftDateReceiving()).as("check giftDateReceiving").isEqualTo(expected.getGiftDateReceiving()))
            .satisfies(a -> assertThat(a.getGiftOwnDesire()).as("check giftOwnDesire").isEqualTo(expected.getGiftOwnDesire()))
            .satisfies(a -> assertThat(a.getGiftImpact()).as("check giftImpact").isEqualTo(expected.getGiftImpact()))
            .satisfies(a ->
                assertThat(a.getGiftReasonAcceptanceRejection())
                    .as("check giftReasonAcceptanceRejection")
                    .isEqualTo(expected.getGiftReasonAcceptanceRejection())
            )
            .satisfies(a -> assertThat(a.getAmountCashOffered()).as("check amountCashOffered").isEqualTo(expected.getAmountCashOffered()))
            .satisfies(a -> assertThat(a.getOtherNotes()).as("check otherNotes").isEqualTo(expected.getOtherNotes()))
            .satisfies(a ->
                assertThat(a.getFormalOccasionVisit()).as("check formalOccasionVisit").isEqualTo(expected.getFormalOccasionVisit())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftUpdatableRelationshipsEquals(Gift expected, Gift actual) {
        // empty method
    }
}

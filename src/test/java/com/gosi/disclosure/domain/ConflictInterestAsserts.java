package com.gosi.disclosure.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConflictInterestAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConflictInterestAllPropertiesEquals(ConflictInterest expected, ConflictInterest actual) {
        assertConflictInterestAutoGeneratedPropertiesEquals(expected, actual);
        assertConflictInterestAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConflictInterestAllUpdatablePropertiesEquals(ConflictInterest expected, ConflictInterest actual) {
        assertConflictInterestUpdatableFieldsEquals(expected, actual);
        assertConflictInterestUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConflictInterestAutoGeneratedPropertiesEquals(ConflictInterest expected, ConflictInterest actual) {
        assertThat(actual)
            .as("Verify ConflictInterest auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConflictInterestUpdatableFieldsEquals(ConflictInterest expected, ConflictInterest actual) {
        assertThat(actual)
            .as("Verify ConflictInterest relevant properties")
            .satisfies(a ->
                assertThat(a.getConflictInterestClassification())
                    .as("check conflictInterestClassification")
                    .isEqualTo(expected.getConflictInterestClassification())
            )
            .satisfies(a ->
                assertThat(a.getConflictInterestEntityIndividual())
                    .as("check conflictInterestEntityIndividual")
                    .isEqualTo(expected.getConflictInterestEntityIndividual())
            )
            .satisfies(a ->
                assertThat(a.getConflictInterestDateArose())
                    .as("check conflictInterestDateArose")
                    .isEqualTo(expected.getConflictInterestDateArose())
            )
            .satisfies(a ->
                assertThat(a.getConflictInterestImpact()).as("check conflictInterestImpact").isEqualTo(expected.getConflictInterestImpact())
            )
            .satisfies(a ->
                assertThat(a.getRelationshipEntityIndividual())
                    .as("check relationshipEntityIndividual")
                    .isEqualTo(expected.getRelationshipEntityIndividual())
            )
            .satisfies(a -> assertThat(a.getAffectPermission()).as("check affectPermission").isEqualTo(expected.getAffectPermission()))
            .satisfies(a -> assertThat(a.getCaseDetails()).as("check caseDetails").isEqualTo(expected.getCaseDetails()))
            .satisfies(a -> assertThat(a.getDiscloseInspector()).as("check discloseInspector").isEqualTo(expected.getDiscloseInspector()))
            .satisfies(a ->
                assertThat(a.getFacilityRegisteredInsuranceName())
                    .as("check facilityRegisteredInsuranceName")
                    .isEqualTo(expected.getFacilityRegisteredInsuranceName())
            )
            .satisfies(a -> assertThat(a.getOffice()).as("check office").isEqualTo(expected.getOffice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConflictInterestUpdatableRelationshipsEquals(ConflictInterest expected, ConflictInterest actual) {
        // empty method
    }
}
